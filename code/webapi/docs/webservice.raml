#%RAML 1.0
title: IoT Coffee Machine Core
version: v1.0
baseUri: http://localhost:5000
protocols: [ HTTP, HTTPS ]
mediaType:  application/json

types:
  coffee-brand-create: !include types/coffee-brand-create.raml
  coffee-brand: !include types/coffee-brand.raml
  coffee-machine-create: !include types/coffee-machine-create.raml
  coffee-machine: !include types/coffee-machine.raml
  coffee-product: !include types/coffee-product.raml
  coffee-profile: !include types/coffee-profile.raml
  coffee-type-create: !include types/coffee-type-create.raml
  coffee-type: !include types/coffee-type.raml
  credentials: !include types/credentials.raml
  job-create: !include types/job-create.raml
  job: !include types/job.raml
  token: !include types/token.raml
  user: !include types/user.raml
  userrequest-edit-roles: !include types/userrequest-edit-roles.raml
  userrequest-edit: !include types/userrequest-edit.raml
  userrequest-create: !include types/userrequest-create.raml
  userrole: !include types/userrole.raml

securitySchemes:
  jwt: !include securitySchemes/custom-jwt.raml

/auth:    
  /login:
    post:
      description: Am System anmelden.
      body:
        type: credentials
      responses:
        200:
          description: Ok. Login erfolgreich.
          body:
            type: token
  /refresh:
    securedBy: [ jwt ]
    post:
      description: Liefert einen neuen JWT-Token.
      responses:
        200:
          description: Ok. JWT-Token erneuert.
          body:
            type: token

/users:
  securedBy: [ jwt ]
  get:
    description: Liefert eine Liste an Nutzeraccounts.
    responses:
      200:
        description: Ok.
        body:
          type: user[]
  post:
    description: Erstellt einen neuen Nutzeraccount.
    body:
      type: userrequest-create
    responses:
      201:
        description: Created. Nutzeraccount erstellt.
        headers:
          Location:
            description: URL zum neu angelegten Nutzeraccount.
        body:
          type: user
  /{public_id}:
    securedBy: [ jwt ]
    uriParameters: 
      public_id: 
        description: Öffentliche ID des Nutzeraccounts.
        type: string
        example: f9940ce9-5adf-4247-810c-b2f7e771143b
    get:
      description: Liefert den Nutzeraccount mit der angegebenen öffentlichen ID.
      responses:
        200:
          description: Ok. 
          body:
            type: user
    put:
      description: Bearbeitet den Nutzeraccount mit der angegebenen öffentlichen ID.
      body:
        type: userrequest-edit
      responses:
        200:
          description: Ok. Nutzeraccount bearbeitet.
          body:
            type: user
    delete:
      description: Löscht den Nutzeraccount mit der angegebenen öffentlichen ID.
      responses:
        200:
          description: Ok. Nutzeraccount gelöscht.
    /roles:
      securedBy: [ jwt ]
      get:
        description: Liefert eine Liste aller Nutzerrollen des Nutzeraccounts mit der angegebenen öffentlichen ID.
        responses:
          200:
            description: Ok.
            body:
              type: userrole[]
      put:
        description: Bearbeitet Nutzerrollen des Nutzeraccounts mit der angegebenen öffentlichen ID.
        body:
          type: userrequest-edit-roles
        responses:
          200:
            description: Ok. Nutzerrollen bearbeitet.
            body:
              type: userrole[]
    /profiles: !include resources/coffee-profiles.raml
  /current:
    securedBy: [ jwt ]
    get:
      description: Liefert den Nutzeraccount des eingeloggten Nutzers.
      responses:
        200:
          description: Ok.
          body:
            type: user
    put:
      description: Bearbeitet den Nutzeraccount des eingeloggten Nutzers.
      body:
        type: userrequest-edit
      responses:
        200:
          description: Ok. Nutzeraccount bearbeitet.
          body:
            type: user
    /profiles: !include resources/coffee-profiles.raml
    /jobs:
      securedBy: [ jwt ]
      get: !include resources/jobs-get.raml
      post: !include resources/jobs-post.raml
              

/roles:
  securedBy: [ jwt ]
  get:
    description: Liefert eine Liste aller verfügbarer Nutzerrollen.
    responses:
      200:
        description: Ok.
        body:
          type: userrole[]

/jobs:
  securedBy: [ jwt ]
  get: !include resources/jobs-get.raml
  post: !include resources/jobs-post.raml
  /{id}:
    securedBy: [ jwt ]
    put: !include resources/jobs-put.raml
    delete:
      description: Löscht den Auftrag mit der angegebenen ID.
      uriParameters: 
        id:
          type: integer
          description: ID des Auftrags.
          example: 42
      responses:
        200:
          description: Ok. Auftrag gelöscht.

/coffee:
  /products:
    securedBy: [ jwt ]
    get:
      description: Liefert eine Liste an verfügbaren Kaffeeprodukten.
      responses: 
        200:
          description: Ok.
          body:
            type: coffee-product[]
    post:
      description: Erstellt ein neues Kaffeeprodukt.
      body:
        type: coffee-product-create
      responses: 
        201:
          description: Created. Neues Kaffeeprodukt erstellt.
          headers:
            Location:
              description: URL des neu erstellten Kaffeeprodukts.
          body:
            type: coffee-product
  /types:
    securedBy: [ jwt ]
    get:
      description: Liefert eine Liste an verfügbaren Kaffeetypen.
      responses: 
        200:
          description: Ok.
          body:
            type: coffee-type[]
    post:
      description: Erstellt einen neue Kaffeetyp.
      body:
        type: coffee-type-create
      responses: 
        201:
          description: Created. Neuer Kaffeetype erstellt.
          headers:
            Location:
              description: URL zum neu angelegten Kaffeetyp.
          body:
            type: coffee-type
  /brands:
    securedBy: [ jwt ]
    get:
      description: Liefert eine Liste an verfügbaren Kaffeemarken.
      responses: 
        200:
          description: Ok.
          body:
            type: coffee-brand[]
    post:
      description: Erstellt eine neue Kaffeemarke.
      body:
        type: coffee-brand-create
      responses: 
        201:
          description: Created. Neue Kaffeemarke erstellt.
          headers:
            Location:
              description: URL zur neu angelegten Kaffeemarke.
          body:
            type: coffee-brand
  /machines:
    securedBy: [ jwt ]
    get:
      description: Liefert eine Liste an verfügbaren Kaffeemaschinen.
      responses:
        200:
          description: Ok.
          body:
            type: coffee-machine[]
    post:
      description: Erstellt eine neue Kaffeemaschine.
      body:
        type: coffee-machine-create
      responses: 
        201:
          description: Created. Neue Kaffeemachine erstellt.
          headers:
            Location:
              description: URL zur neu angelegten Kaffeemaschine.
          body:
            type: coffee-machine
  